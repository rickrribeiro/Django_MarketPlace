# Generated by Django 2.2.24 on 2021-09-13 22:46

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import rizzo.helpers
import rizzo.models
import stdimage.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=60, unique=True, verbose_name='E-mail')),
                ('name', models.CharField(max_length=30, verbose_name='Nome')),
                ('last_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Sobrenome')),
                ('username', models.CharField(blank=True, max_length=30, null=True, unique=True, verbose_name='Usuário')),
                ('phone', models.CharField(blank=True, max_length=15, null=True, verbose_name='Telefone')),
                ('image', stdimage.models.StdImageField(blank=True, default='default_profile.png', null=True, upload_to=rizzo.helpers.get_file_path, verbose_name='Foto do perfil')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Membro da equipe')),
                ('is_famous', models.BooleanField(default=False, verbose_name='Famoso')),
                ('instagram', models.CharField(blank=True, max_length=15, null=True, verbose_name='Instagram')),
                ('facebook', models.CharField(blank=True, max_length=15, null=True, verbose_name='Facebook')),
                ('twitter', models.CharField(blank=True, max_length=15, null=True, verbose_name='Twitter')),
                ('youtube', models.CharField(blank=True, max_length=15, null=True, verbose_name='Youtube')),
                ('subcategory', models.CharField(blank=True, max_length=70, null=True, verbose_name='subcategory')),
                ('description', models.CharField(blank=True, max_length=600, null=True, verbose_name='Descrição')),
                ('spotlight', models.BooleanField(default=False, verbose_name='Destaque')),
                ('intro_video', models.FileField(blank=True, null=True, upload_to='uploads/intro/')),
                ('to_ngo', models.BooleanField(default=False, verbose_name='Para ONGs')),
                ('ngo_percentage', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)], verbose_name='Porcentagem da ONG')),
                ('cpf', models.CharField(blank=True, max_length=14, null=True, verbose_name='CPF')),
            ],
            options={
                'verbose_name': 'user',
                'abstract': False,
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', rizzo.models.UsuarioManager()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True, verbose_name='Criação')),
                ('modified', models.DateField(auto_now=True, verbose_name='Atualização')),
                ('active', models.BooleanField(default=True, verbose_name='Ativo?')),
                ('name', models.CharField(max_length=30, verbose_name='Nome')),
                ('image', stdimage.models.StdImageField(upload_to=rizzo.helpers.get_file_path, verbose_name='Imagem')),
                ('spotlight', models.BooleanField(default=False, verbose_name='Destaque')),
                ('icon', stdimage.models.StdImageField(null=True, upload_to=rizzo.helpers.get_file_path, verbose_name='Icone')),
            ],
            options={
                'verbose_name': 'Categoria',
                'verbose_name_plural': 'Categorias',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True, verbose_name='Criação')),
                ('modified', models.DateField(auto_now=True, verbose_name='Atualização')),
                ('active', models.BooleanField(default=True, verbose_name='Ativo?')),
                ('title', models.CharField(max_length=40, verbose_name='Titulo')),
                ('email', models.EmailField(max_length=254, verbose_name='E-mail')),
                ('phone', models.CharField(blank=True, max_length=15, null=True, verbose_name='Telefone')),
                ('description', models.CharField(max_length=600, verbose_name='Descrição')),
                ('image', stdimage.models.StdImageField(blank=True, null=True, upload_to=rizzo.helpers.get_file_path, verbose_name='Foto do problema')),
                ('read', models.BooleanField(default=False, verbose_name='Done')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Ngo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True, verbose_name='Criação')),
                ('modified', models.DateField(auto_now=True, verbose_name='Atualização')),
                ('active', models.BooleanField(default=True, verbose_name='Ativo?')),
                ('name', models.CharField(max_length=60, verbose_name='Nome')),
                ('adress', models.CharField(max_length=80, verbose_name='Endereço')),
                ('phone', models.CharField(max_length=15, verbose_name='Telefone')),
                ('email', models.CharField(max_length=40, verbose_name='Email')),
                ('description', models.CharField(max_length=500, verbose_name='Descrição')),
                ('image', stdimage.models.StdImageField(blank=True, null=True, upload_to=rizzo.helpers.get_file_path, verbose_name='Foto do perfil')),
            ],
            options={
                'verbose_name': 'Ong',
                'verbose_name_plural': 'ONGs',
            },
        ),
        migrations.CreateModel(
            name='ServiceType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True, verbose_name='Criação')),
                ('modified', models.DateField(auto_now=True, verbose_name='Atualização')),
                ('active', models.BooleanField(default=True, verbose_name='Ativo?')),
                ('name', models.CharField(max_length=40, verbose_name='Nome')),
                ('description', models.CharField(max_length=180, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Tipo de Serviço',
                'verbose_name_plural': 'Tipo de Serviços',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True, verbose_name='Criação')),
                ('modified', models.DateField(auto_now=True, verbose_name='Atualização')),
                ('active', models.BooleanField(default=True, verbose_name='Ativo?')),
                ('price', models.IntegerField(verbose_name='Preço')),
                ('deliver_time', models.IntegerField(verbose_name='Tempo de entrega (Dias)')),
                ('famous', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_user', to=settings.AUTH_USER_MODEL)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='servicetype', to='rizzo.ServiceType')),
            ],
            options={
                'verbose_name': 'Serviço',
                'verbose_name_plural': 'Serviços',
            },
        ),
        migrations.CreateModel(
            name='Search',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True, verbose_name='Criação')),
                ('modified', models.DateField(auto_now=True, verbose_name='Atualização')),
                ('active', models.BooleanField(default=True, verbose_name='Ativo?')),
                ('text', models.CharField(blank=True, max_length=100, null=True, verbose_name='Texto Pesquisado')),
                ('famous', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='searched_famous', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='search_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True, verbose_name='Criação')),
                ('modified', models.DateField(auto_now=True, verbose_name='Atualização')),
                ('active', models.BooleanField(default=True, verbose_name='Ativo?')),
                ('done', models.BooleanField(default=False, verbose_name='Done')),
                ('payed', models.BooleanField(default=False, verbose_name='Payed')),
                ('rating', models.IntegerField(blank=True, null=True, verbose_name='Avaliação')),
                ('customerMessage', models.CharField(blank=True, max_length=300, null=True, verbose_name='Mensagem do Cliente')),
                ('famousMessage', models.CharField(blank=True, max_length=300, null=True, verbose_name='Mensagem do Famoso')),
                ('toProfile', models.BooleanField(default=False, verbose_name='Aparece no Perfil')),
                ('video', models.FileField(blank=True, null=True, upload_to='uploads/%Y/%m/%d/')),
                ('link', models.CharField(blank=True, max_length=200, null=True, verbose_name='Link')),
                ('saleCode', models.CharField(blank=True, max_length=30, null=True, unique=True, verbose_name='Código da venda')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sale_customer', to=settings.AUTH_USER_MODEL)),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sale_service', to='rizzo.Service')),
            ],
            options={
                'verbose_name': 'Venda',
                'verbose_name_plural': 'Vendas',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_category', to='rizzo.Category'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='ngo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ngo', to='rizzo.Ngo'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
